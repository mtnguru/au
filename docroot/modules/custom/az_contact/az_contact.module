<?php
/**
 * @file
 * Contains az_contact.module.
 */

use Drupal\az_contact\AzContact;
use Drupal\az_content\AzContentQuery;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Markup;
use Drupal\Core\Url;
use Drupal\media\Entity\Media;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;


/**
 * Implements HOOK_mail().
 */
function az_contact_mail($key, &$message, $params) {
  $far = 5;
  switch ($key) {
    case 'contact_key':
//    $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['from'] = 'Investor Relations <ir@aureon.ca>';
      $message['reply-to'] = 'Investor Relations <ir@aureon.ca>';
      $message['subject'] = $params['subject'];
      $message['body'][] = Markup::create($params['message']);
      $message['headers']['Content-Type'] = SWIFTMAILER_FORMAT_HTML;

      if (!empty($params['attachments'])) {
        foreach($params['attachments'] as $attachment) {
          $mid = $attachment['target_id']; // get file fid;
          $media = Media::load($mid);
          if (isset($media->field_document)) {
            $file = \Drupal\file\Entity\File::load($media->field_document->target_id);

            $f = new stdClass();
            $f->uri = $file->getFileUri();
            $f->filename = $file->getFilename();
            $f->filemime = $file->getMimeType();

            $message['params']['files'][] = $f;
          }
        }
      }
      break;
  }
}

/*
function az_contact_mail_alter(&$message) {
  $far = 5;
//    $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['from'] = 'Investor Information <ir@aureon.ca>';
      $message['reply-to'] = 'Investor Relations <ir@aureon.ca>';
      $message['subject'] = $params['subject'];
      $message['body'][] = Markup::create($params['message']);
      $message['headers']['Content-Type'] = SWIFTMAILER_FORMAT_HTML;
}
*/

function az_contact_send_email($subject, $message, $attachments, $email) {
  $mailManager = \Drupal::service('plugin.manager.mail');
  $params['subject'] = $subject;
  $params['message'] = $message;
  $params['attachments'] = $attachments;
  $langcode = \Drupal::currentUser()->getPreferredLangcode();
  $send = true;
  $result = $mailManager->mail('az_contact', 'contact_key', $email, $langcode, $params, NULL, $send);
}

/**
 * @param $eid - Email node id
 * @param $cid - Contact node id
 */
function az_contact_mark_email_sent($eid, $cid) {
  // Look for a record with this email and contact

}

function az_contact_emailit ($email) {
  if ($email->field_send_email->value) {
    $message = $email->body->value;
    $subject = $email->label();
    $attachments = [];
    if (!$email->field_media_attachment->isEmpty()) {
      $attachments = $email->get('field_media_attachment')->getValue();
    }

    // Create array of selected Interest Ids
    $interestIds = [];
    foreach ($email->get('field_interest') as $item) {
      $interestIds[] = $item->target_id;
    }

    if (count($interestIds)) {
      // Create the mailing list
      $set = [
        'types' => 'contact',
        'interest' => $interestIds,
      ];
      $res = AzContentQuery::nodeQuery($set);

      if (count($res['results'])) {
        // create a new email recipients node
        // populate the date and email fields
        $email_recipients = Node::create([
          'title' => $email->label(),
          'type' => 'email_recipients',
          'field_email_reference' => [
            'target_id' => $email->id(),
          ],
          'field_date_sent' => \Drupal::time()->getRequestTime(),
        ]);

        foreach ($res['results'] as $row) {
          $contact = Node::load($row->nid);
          az_contact_send_email($subject, $message, $attachments, $contact->field_email->value);
          $email_recipients->get('field_recipients')->appendItem(['target_id' => $contact->id()]);
        }
        $email_recipients->save();
      }
    }
  }
}

function az_contact_node_insert(Node $node) {
  if ($node->bundle() == 'email') {
//  az_contact_emailit($node);
  }
}

function az_contact_node_update(Node $node) {
  if ($node->bundle() == 'email') {
//  az_contact_emailit($node);
  }
}

function az_contact_form_node_email_edit_form_alter(&$form, &$form_state, $form_id) {
  foreach (array_keys($form['actions']) as $action) {
    if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
      $form['actions'][$action]['#submit'][] = 'az_contact_form_node_email_submit';
    }
  }
  return;
}

function az_contact_form_node_email_submit(&$form, FormStateInterface &$form_state) {
  $node = $form_state->getFormObject()->getEntity();
  az_contact_emailit($node);

  // $form_state->setValue(['field_configuration_file', 0, 'value'], $form_state->getValue('field_config'));

  //if ($form_state->hasValue('updateChanged') && !$form_state->getValue('updateChanged')) {
    //  $node->set('changed', $form_state->getValue('changed'));
    //};
  //}

  // if send email is enabled then build a list of emails and send the file
  return;
}

/**
 * Implements HOOK_form_alter().
 */
function az_contact_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  return;
}

/**
 * Implements HOOK_form_alter().
 */
function az_contact_form_contact_message_sitewide_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  foreach (array_keys($form['actions']) as $action) {
    if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
      $form['actions'][$action]['#submit'][] = 'az_contact_contact_message_form_submit';
    }
  }
  return;
}

function az_contact_contact_message_form_submit(&$form, FormStateInterface &$form_state) {
  $cm = $form_state->getFormObject()->getEntity();
  AzContact::addContactMessage($cm);
}
