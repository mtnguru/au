<?php

/**
 * @file
 * Functions to support theming in the sf theme.
 */

use Drupal\Core\Url;

/**
 * Implements template_preprocess_html().
 *
 * @param array $variables
 */
function sf_preprocess_html(&$variables) {
  if (!empty($variables['page']['sidebar_first'])) {
    $sidebar_left = $variables['page']['sidebar_first'];
  }

  if (!empty($variables['page']['sidebar_second'])) {
    $sidebar_right = $variables['page']['sidebar_second'];
  }

  // Dynamic sidebars.
  if (!empty($sidebar_left) && !empty($sidebar_right)) {
    $variables['attributes']['class'][] = 'two-sidebars';
  }
  elseif (empty($sidebar_left) && !empty($sidebar_right)) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-second';
  }
  elseif (!empty($sidebar_left) && empty($sidebar_right)) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-first';
  }
  else {
    $variables['attributes']['class'][] = 'no-sidebars';
  }
}

/**
 * Implements template_preprocess().
 */
function sf_preprocess(&$variables) {
  // Make 'is_front' available to all templates.
  try {
    $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  }
  catch (Exception $e) {
    $variables['is_front'] = FALSE;
  }

  // Make the full node content-type available to all templates.
  $variables['az_route_name'] = \Drupal::routeMatch()->getRouteName();
  $route_match = \Drupal::routeMatch();
  if ($route_match->getParameter('node') && is_object($route_match->getParameter('node'))) {
    $variables['az_root_content_type'] = $route_match->getParameter('node')->bundle();
  }
}


/**
 * Implements template_preprocess_page.
 *
 * @param array $variables
 */
function sf_preprocess_page(&$variables) {

  $site_name = \Drupal::configFactory()->get('system.site')->get('name');

  $variables['linked_site_name'] = [
    '#type'  => 'link',
    '#title' => $site_name,
    '#url'   => Url::fromRoute('<front>'),
  ];
}

/**
 * Implements template_preprocess_node.
 *
 * @param array $variables
 */
function sf_preprocess_node(&$variables) {
}
